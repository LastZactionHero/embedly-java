apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.json:json:20090211'
    compile 'org.apache.httpcomponents:httpclient:4.0-beta2'
    compile 'commons-lang:commons-lang:2.5'
    testRuntime 'org.picocontainer:picocontainer:2.13.2'
    runtime 'org.json:json:20090211'
    runtime 'org.apache.httpcomponents:httpclient:4.0-beta2'
    runtime 'commons-lang:commons-lang:2.5'
}

task copySteps(type: Copy) {
    from 'src/test/jruby'
    into 'build/classes/test'
}

task libs(type: Sync) {
    from configurations.runtime
    into "$buildDir/libs"
}

task testLibs(type: Sync) {
    from configurations.testRuntime
    into "$buildDir/testLibs"
}

task checkJRuby {
    logger.info(':exec jruby -v')
    Process proc = ["jruby", "-v"].execute()
    logger.info('>> stdout: '+proc.text)
    logger.info('>> stderr: '+proc.err.text)
    if (proc.exitValue()) {
        throw new RuntimeException('Please install JRuby');
    }
}

task cukeLibs(dependsOn: checkJRuby) {
    logger.info(':exec: ruby -e"%w{rubygems cuke4duke rspec}.each{|i| require i}"')
    Process check = ['ruby', '-e', '%w{rubygems cuke4duke rspec}.each{|i| require i}'].execute()
    logger.info('>> stdout: '+check.text)
    logger.info('>> stderr: '+check.err.text)
    if (check.exitValue()) {
        logger.info('exec: gem install cuke4duke rspec')
        Process install = ['gem', 'install', 'cuke4duke', 'rspec'].execute()
        logger.info('>> stdout: '+install.text)
        logger.info('>> stderr: '+install.err.text)
        if (install.exitValue()) {
            throw new RuntimeException('Please install cuke4duke')
        }
    }
}

task runFeatures(dependsOn: [compileJava, copySteps, testLibs, cukeLibs]) << {
    Process proc = ["cuke4duke", 
        "--require", "$buildDir/classes/main/",
        "--require", "$buildDir/classes/test/",
        "--jars", "$buildDir/testLibs", 
        "src/test/features/"].execute()
    proc.consumeProcessErrorStream(System.err)
    proc.consumeProcessOutputStream(System.out)
    if (proc.waitFor() != 0) {
        throw new RuntimeException('runFeatures failed')
    }
}
